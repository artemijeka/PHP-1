<?php
////////////////////////////////////////////////////////////////////////////////////////////////////
/**************************************** ПРЕОБРАЗОВАНИЯ: ****************************************/
// СТРОКИ В ЧИСЛО
(int)"6 pack"; // 6
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
/******************************************* ОПЕРАЦИИ: *******************************************/
// ОТРИЦАНИЕ !
!true === false; // не истина === лжи

// ЛОГИЧЕСКИЕ ОПЕРАЦИИ && и ||
true && true; // true
false || true; // true
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
/******************************************* СРАВНЕНИЯ: *******************************************/
// СТРОК strcmp() или strcasecmp()
strcmp("abs", "ABS"); // -1 так как ABS (верхний регистр) идет раньше, а abs позже, в символьной таблице PHP.
strcasecmp("abs", "ABS"); // 0 так как abs === abs. Так как strcasecmp() - регистроНЕЗАВИСИМАЯ функция.

// СРАВНЕНИЯ СОСТАВНОЙ ОПЕРАЦИЕЙ <=> (PHP>7)
1 <=> 2; // -1 левое меньше правого.
"charlie" <=> "bob"; // 1 левое больше правого, так как "c" идет после "b" в лексиграфической таблице PHP.
////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
/********************************************* ЦИКЛЫ: *********************************************/
// FOR (для условия) for();

// WHILE (пока верно условие) while();

////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////
/******************************************** МАССИВЫ: ********************************************/
// ПОЛУЧИТЬ ТЕКУЩИЙ ЭЛЕМЕНТ МАССИВА
current($array); // получить текущий элемент массива
next($array); // перевод указателя на следующий элемент
current($array); // получить слудующий элемент массива

// ПОЛУЧИТЬ КЛЮЧ ТЕКУЩЕГО ЭЛЕМЕНТА В МАССИВЕ
key($array); // ключ текущего элемента массива
next($array); // перевод указателя на следующий элемент
key($array); // получение следующего ключа

// УЗНАТЬ ЕСТЬ ЛИ В МАССИВЕ КЛЮЧ
array_key_exists(mixed($key), $array); // ОТДАСТ TRUE или FALSE в зависимости от того есть ли такой КЛЮЧ в массиве
// ПРОВЕРКА СУЩЕСТВОВАНИЯ ЭЛЕМЕНТА В МАССИВЕ С КОНКРЕТНЫМ ЗНАЧЕНИЕМ
in_array(mixed($value), $array); // ОТДАСТ TRUE или FALSE в зависимости от того есть ли такое ЗНАЧЕНИЕ в массиве
// ПОЛУЧИТЬ КЛЮЧ ИСКОМОГО ЗНАЧЕНИЯ ЭЛЕМЕНТА В МАССИВЕ
array_search(mixed($value), $array); // ОТДАСТ КЛЮЧ если такое ЗНАЧЕНИЕ есть в массиве
////////////////////////////////////////////////////////////////////////////////////////////////////